#!/usr/bin/env lua53

local dice_expression = require("fimbul.dice_expression")
local cli = require("fimbul.ui.cli")

local os = require("os")
local cliargs = cli.args()

cliargs:flag('-m, --multi-line', 'stdin is one big chunk. Disables -v')
cliargs:flag('-e, --expression', 'print expression alongside result')
cliargs:splat('EXPRESSIONS', 'expressions to evaluate', nil, 999)

local opts = cli.parse(cliargs)

function evaluate_statement(str)
   local ret = dice_expression.evaluate(str)

   if opts.expression then
      io.write(string.format("%s = %d\n", str, ret))
   else
      io.write(string.format("%d\n", ret))
   end
end

function save_read(str)
   local stat, res = pcall(io.read, str)

   if not stat or not res then
      os.exit(0)
   end
   return res
end

function read_stdin()
   if not opts.multi_line then
      local done = false

      while not done do
         local line = save_read("*l")
         evaluate_statement(line)
      end
   else
      local all = save_read("*all")
      evaluate_statement(all)
   end
end

if not opts.EXPRESSIONS or #opts.EXPRESSIONS == 0 then
   read_stdin()
else
   for _, expr in ipairs(opts.EXPRESSIONS) do
      evaluate_statement(expr)
   end
end
