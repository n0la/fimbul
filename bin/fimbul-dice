#!/usr/bin/env lua

local dice_expression = require("fimbul.dice_expression")

local os = require("os")
local std = require("std")

local optparser = std.optparse [[
 dice 0.1

 Usage: dice [-hmv] dice1, dice2, ..., diceN

 Roll dice and/or evaluate dice expressions.

 This application evaluates dice expressions given on the command line. If
 none are given then it evaluate stdin.

 Options:

   -h  --help               This bogus.
   -m  --multi-line         stdin is one big chunk. Disables -v
   -v  --verbose            Print expression alongside result.

 "dice" is part of the fimbul project.
]]

local expressions, opts = optparser:parse(arg)

function evaluate_statement(str)
   local ret = dice_expression.evaluate(str)

   if opts.verbose then
      io.write(string.format("%s = %d\n", str, ret))
   else
      io.write(string.format("%d\n", ret))
   end
end

function save_read(str)
   local stat, res = pcall(io.read, str)

   if not stat or not res then
      os.exit(0)
   end
   return res
end

function read_stdin()
   if opts.linebased then
      local done = false

      while not done do
         local line = save_read("*l")
         evaluate_statement(line)
      end
   else
      local all = save_read("*all")
      evaluate_statement(all)
   end
end

if not expressions or #expressions == 0 then
   read_stdin()
else
   for i = 1, #expressions do
      evaluate_statement(expressions[i])
   end
end
